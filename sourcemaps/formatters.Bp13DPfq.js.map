{"version":3,"file":"formatters.CQH024bt.js","sources":["../../../lib/components/logic/constants.ts","../../../lib/components/logic/utils/ellipsisString.ts","../../../lib/components/logic/utils/formatters.ts"],"sourcesContent":["const BRUSH_HEIGHT = 25;\nconst BRUSH_ITEMS_PER_PAGE = 10;\nconst LEGEND_HEIGHT = 25;\nconst X_AXIS_BASE_HEIGHT = 10;\nconst TICK_DASH_WIDTH = 10;\nconst DASHED_LINE = '20 20'; // or '5 5'\nconst DEFAULT_Y_TICK_COUNT = 5; // <--- recharts defaults to 5 anyways\n\nconst CLASSES = {\n  tooltip: 'tk-custom-tooltip',\n  brush: 'tk-custom-brush', // 'recharts-custom-brush'\n};\n\nconst COLORS = [\n  '#0088FE',\n  '#00C49F',\n  '#FFBB28',\n  '#FF8042',\n  '#4CAF50',\n  '#9C27B0',\n  '#FF5722',\n  '#795548',\n  '#607D8B',\n  '#E91E63',\n  '#9E9E9E',\n  '#2196F3',\n  '#3F51B5',\n  '#FF9800',\n  '#009688',\n  '#FFEB3B',\n  '#CDDC39',\n  '#03A9F4',\n  '#8BC34A',\n  '#FF5252',\n];\n\nexport {\n  BRUSH_HEIGHT,\n  BRUSH_ITEMS_PER_PAGE,\n  CLASSES,\n  COLORS,\n  DASHED_LINE,\n  DEFAULT_Y_TICK_COUNT,\n  LEGEND_HEIGHT,\n  TICK_DASH_WIDTH,\n  X_AXIS_BASE_HEIGHT,\n};\n","type EllipsisStringProps = {\n  str: string;\n  maxStringLength: number;\n};\n\nfunction ellipsisString(props: EllipsisStringProps): string {\n  const { str, maxStringLength = 8 } = props;\n\n  const updatedString = str.length > maxStringLength ? str.substring(0, maxStringLength).concat('..') : str;\n\n  return updatedString;\n}\n\nexport { ellipsisString };\n","import { ellipsisString } from './ellipsisString';\n\nconst map = [\n  { suffix: 'T', threshold: 1e12 },\n  { suffix: 'B', threshold: 1e9 },\n  { suffix: 'M', threshold: 1e6 },\n  { suffix: 'K', threshold: 1e3 },\n  { suffix: '', threshold: 1 },\n];\n\ntype FormatNumberProps = { num: number; precision?: number };\n\nfunction formatNumber(props: FormatNumberProps): string {\n  const { num, precision = 2 } = props;\n\n  const found = map.find((mapItem) => Math.abs(num) >= mapItem.threshold);\n  if (found) {\n    const precisionValue = 10 ** precision;\n    const formatted = Math.round((num / found.threshold) * precisionValue) / precisionValue + found.suffix;\n\n    return formatted;\n  }\n\n  return num.toString();\n}\n\nfunction formatLabel(value?: string | number, maxStringLength: number = 9): string | undefined {\n  if (value == null) return undefined;\n\n  if (typeof value === 'string') return ellipsisString({ str: value, maxStringLength });\n\n  return formatNumber({ num: value });\n}\n\n/**\n * @description\n * The argument `date` is a unix timestamp in milliseconds, which means it's a number.\n * I didn't put number as the type, because of FORMATTERS. When calling FORMATTERS[type](value),\n * there's a mixture of types, and hence a typescript error.\n */\nfunction formatDate(date: any): string {\n  const formattedDate = Intl.DateTimeFormat('en-US').format(date);\n\n  return formattedDate;\n}\n\nconst FORMATTERS = {\n  category: formatLabel,\n  number: formatLabel,\n  datetime: formatDate,\n};\n\nexport { FORMATTERS, formatDate, formatLabel };\n"],"names":["BRUSH_HEIGHT","BRUSH_ITEMS_PER_PAGE","LEGEND_HEIGHT","X_AXIS_BASE_HEIGHT","TICK_DASH_WIDTH","DASHED_LINE","DEFAULT_Y_TICK_COUNT","CLASSES","COLORS","ellipsisString","props","str","maxStringLength","map","formatNumber","num","precision","found","mapItem","precisionValue","formatLabel","value","formatDate","date","FORMATTERS"],"mappings":"AAAA,MAAMA,EAAe,GACfC,EAAuB,GACvBC,EAAgB,GAChBC,EAAqB,GACrBC,EAAkB,GAClBC,EAAc,QACdC,EAAuB,EAEvBC,EAAU,CACd,QAAS,oBACT,MAAO,iBACT,EAEMC,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACF,EC7BA,SAASC,EAAeC,EAAoC,CAC1D,KAAM,CAAE,IAAAC,EAAK,gBAAAC,EAAkB,CAAA,EAAMF,EAI9B,OAFeC,EAAI,OAASC,EAAkBD,EAAI,UAAU,EAAGC,CAAe,EAAE,OAAO,IAAI,EAAID,CAGxG,CCTA,MAAME,EAAM,CACV,CAAE,OAAQ,IAAK,UAAW,IAAK,EAC/B,CAAE,OAAQ,IAAK,UAAW,GAAI,EAC9B,CAAE,OAAQ,IAAK,UAAW,GAAI,EAC9B,CAAE,OAAQ,IAAK,UAAW,GAAI,EAC9B,CAAE,OAAQ,GAAI,UAAW,CAAE,CAC7B,EAIA,SAASC,EAAaJ,EAAkC,CACtD,KAAM,CAAE,IAAAK,EAAK,UAAAC,EAAY,CAAA,EAAMN,EAEzBO,EAAQJ,EAAI,KAAMK,GAAY,KAAK,IAAIH,CAAG,GAAKG,EAAQ,SAAS,EACtE,GAAID,EAAO,CACT,MAAME,EAAiB,IAAMH,EAGtB,OAFW,KAAK,MAAOD,EAAME,EAAM,UAAaE,CAAc,EAAIA,EAAiBF,EAAM,MAGlG,CAEA,OAAOF,EAAI,UACb,CAEA,SAASK,EAAYC,EAAyBT,EAA0B,EAAuB,CACzF,GAAAS,GAAS,KAET,OAAA,OAAOA,GAAU,SAAiBZ,EAAe,CAAE,IAAKY,EAAO,gBAAAT,CAAA,CAAiB,EAE7EE,EAAa,CAAE,IAAKO,CAAO,CAAA,CACpC,CAQA,SAASC,EAAWC,EAAmB,CAG9B,OAFe,KAAK,eAAe,OAAO,EAAE,OAAOA,CAAI,CAGhE,CAEA,MAAMC,EAAa,CACjB,SAAUJ,EACV,OAAQA,EACR,SAAUE,CACZ"}